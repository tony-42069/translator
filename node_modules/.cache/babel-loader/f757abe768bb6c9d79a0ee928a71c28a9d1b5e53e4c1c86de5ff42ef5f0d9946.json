{"ast":null,"code":"// src/components/TranslationApp.js\nimport React,{useState,useEffect,useCallback}from'react';import{Box,Button,VStack,Text,useToast,Container,Heading,Card,CardBody,Switch,HStack,Badge}from'@chakra-ui/react';import TranslationService from'../services/TranslationService';import SocketService from'../services/SocketService';import AudioService from'../services/AudioService';import CallInterface from'./CallInterface';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TranslationApp(){const[isListening,setIsListening]=useState(false);const[conversations,setConversations]=useState([]);const[currentLanguage,setCurrentLanguage]=useState('Albanian');const[error,setError]=useState(null);const[isCallModalOpen,setIsCallModalOpen]=useState(false);const[isInCall,setIsInCall]=useState(false);const[usageStats,setUsageStats]=useState({characters:0,requests:0});const toast=useToast();const handleTranslationResult=useCallback((original,translated)=>{setConversations(prev=>[...prev,{original,translated,timestamp:new Date().toLocaleTimeString(),direction:currentLanguage==='Albanian'?'Albanian → English':'English → Albanian'}].slice(-5));setUsageStats(prev=>({characters:prev.characters+original.length+translated.length,requests:prev.requests+1}));// If in a call, send translation to other participants\nif(isInCall){var _SocketService$socket;(_SocketService$socket=SocketService.socket)===null||_SocketService$socket===void 0?void 0:_SocketService$socket.emit('translation-result',{roomId:SocketService.roomId,originalText:original,translatedText:translated,targetLanguage:currentLanguage==='Albanian'?'en-US':'sq-AL'});}},[currentLanguage,isInCall]);const handleError=useCallback(error=>{setError(error.toString());toast({title:'Error',description:error.toString(),status:'error',duration:3000,isClosable:true});},[toast]);useEffect(()=>{try{TranslationService.setCallbacks(handleTranslationResult,handleError);// Set up socket handlers for translations\nSocketService.setTranslationReceivedCallback(data=>{const{originalText,translatedText,targetLanguage}=data;setConversations(prev=>[...prev,{original:originalText,translated:translatedText,timestamp:new Date().toLocaleTimeString(),direction:targetLanguage==='en-US'?'Albanian → English':'English → Albanian'}].slice(-5));});// Set up socket handlers for audio\nSocketService.setAudioReceivedCallback(async(audio,language)=>{try{const result=await TranslationService.processAudioStream(audio,language,currentLanguage==='Albanian'?'en-US':'sq-AL');handleTranslationResult(result.original,result.translated);}catch(error){handleError(error);}});}catch(error){setError('Speech recognition not supported in this browser. Please use Chrome.');}},[handleTranslationResult,handleError,currentLanguage]);const toggleListening=async()=>{try{if(isListening){if(isInCall){await AudioService.stopProcessing();}else{await TranslationService.stopListening();}setIsListening(false);}else{setError(null);if(isInCall){await SocketService.startStreaming();}else{await TranslationService.startListening();}setIsListening(true);}}catch(error){handleError(error);}};const toggleLanguage=()=>{const newLang=currentLanguage==='Albanian'?'English':'Albanian';setCurrentLanguage(newLang);TranslationService.setLanguage(newLang==='Albanian'?'sq-AL':'en-US');};const handleCallStart=()=>{setIsInCall(true);setIsListening(true);};const handleCallEnd=()=>{setIsInCall(false);setIsListening(false);setIsCallModalOpen(false);};return/*#__PURE__*/_jsx(Container,{maxW:\"container.md\",py:8,children:/*#__PURE__*/_jsxs(VStack,{spacing:6,align:\"stretch\",children:[/*#__PURE__*/_jsx(Heading,{textAlign:\"center\",mb:4,children:\"Albanian Voice Translator\"}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(HStack,{justifyContent:\"space-between\",mb:4,children:[/*#__PURE__*/_jsx(Text,{children:\"Speaking Language:\"}),/*#__PURE__*/_jsxs(HStack,{children:[/*#__PURE__*/_jsx(Text,{color:currentLanguage==='Albanian'?'blue.500':'gray.500',children:\"Albanian\"}),/*#__PURE__*/_jsx(Switch,{isChecked:currentLanguage==='English',onChange:toggleLanguage,colorScheme:\"blue\"}),/*#__PURE__*/_jsx(Text,{color:currentLanguage==='English'?'blue.500':'gray.500',children:\"English\"})]})]}),/*#__PURE__*/_jsxs(HStack,{justifyContent:\"space-between\",mt:4,p:4,bg:\"gray.50\",borderRadius:\"md\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",children:[\"Characters Translated: \",usageStats.characters]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",children:[\"API Requests: \",usageStats.requests]})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"purple\",onClick:()=>setIsCallModalOpen(true),isDisabled:isListening&&!isInCall,children:isInCall?'Current Call':'Start Call'})]})]})}),conversations.map((conv,index)=>/*#__PURE__*/_jsx(Card,{variant:\"outline\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Badge,{mb:2,colorScheme:\"blue\",children:conv.direction}),/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",mb:2,children:\"Original:\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",mb:3,children:conv.original}),/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",mb:2,children:\"Translated:\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:conv.translated}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.500\",mt:2,children:conv.timestamp})]})},index)),error&&/*#__PURE__*/_jsx(Box,{bg:\"red.50\",p:4,borderRadius:\"md\",children:/*#__PURE__*/_jsx(Text,{color:\"red.500\",children:error})}),/*#__PURE__*/_jsx(Button,{size:\"lg\",colorScheme:isListening?'red':'blue',onClick:toggleListening,isLoading:isListening,loadingText:\"Listening...\",children:isListening?'Stop Listening':'Start Recording'}),/*#__PURE__*/_jsx(CallInterface,{isOpen:isCallModalOpen,onClose:handleCallEnd,onCallStart:handleCallStart})]})});}export default TranslationApp;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Button","VStack","Text","useToast","Container","Heading","Card","CardBody","Switch","HStack","Badge","TranslationService","SocketService","AudioService","CallInterface","jsx","_jsx","jsxs","_jsxs","TranslationApp","isListening","setIsListening","conversations","setConversations","currentLanguage","setCurrentLanguage","error","setError","isCallModalOpen","setIsCallModalOpen","isInCall","setIsInCall","usageStats","setUsageStats","characters","requests","toast","handleTranslationResult","original","translated","prev","timestamp","Date","toLocaleTimeString","direction","slice","length","_SocketService$socket","socket","emit","roomId","originalText","translatedText","targetLanguage","handleError","toString","title","description","status","duration","isClosable","setCallbacks","setTranslationReceivedCallback","data","setAudioReceivedCallback","audio","language","result","processAudioStream","toggleListening","stopProcessing","stopListening","startStreaming","startListening","toggleLanguage","newLang","setLanguage","handleCallStart","handleCallEnd","maxW","py","children","spacing","align","textAlign","mb","justifyContent","color","isChecked","onChange","colorScheme","mt","p","bg","borderRadius","fontSize","onClick","isDisabled","map","conv","index","variant","fontWeight","size","isLoading","loadingText","isOpen","onClose","onCallStart"],"sources":["D:/AI Projects/translator/src/components/TranslationApp.js"],"sourcesContent":["// src/components/TranslationApp.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Button,\n  VStack,\n  Text,\n  useToast,\n  Container,\n  Heading,\n  Card,\n  CardBody,\n  Switch,\n  HStack,\n  Badge,\n} from '@chakra-ui/react';\nimport TranslationService from '../services/TranslationService';\nimport SocketService from '../services/SocketService';\nimport AudioService from '../services/AudioService';\nimport CallInterface from './CallInterface';\n\nfunction TranslationApp() {\n  const [isListening, setIsListening] = useState(false);\n  const [conversations, setConversations] = useState([]);\n  const [currentLanguage, setCurrentLanguage] = useState('Albanian');\n  const [error, setError] = useState(null);\n  const [isCallModalOpen, setIsCallModalOpen] = useState(false);\n  const [isInCall, setIsInCall] = useState(false);\n  const [usageStats, setUsageStats] = useState({\n    characters: 0,\n    requests: 0\n  });\n  const toast = useToast();\n\n  const handleTranslationResult = useCallback((original, translated) => {\n    setConversations(prev => [\n      ...prev,\n      {\n        original,\n        translated,\n        timestamp: new Date().toLocaleTimeString(),\n        direction: currentLanguage === 'Albanian' ? 'Albanian → English' : 'English → Albanian'\n      }\n    ].slice(-5));\n\n    setUsageStats(prev => ({\n      characters: prev.characters + original.length + translated.length,\n      requests: prev.requests + 1\n    }));\n\n    // If in a call, send translation to other participants\n    if (isInCall) {\n      SocketService.socket?.emit('translation-result', {\n        roomId: SocketService.roomId,\n        originalText: original,\n        translatedText: translated,\n        targetLanguage: currentLanguage === 'Albanian' ? 'en-US' : 'sq-AL'\n      });\n    }\n  }, [currentLanguage, isInCall]);\n\n  const handleError = useCallback((error) => {\n    setError(error.toString());\n    toast({\n      title: 'Error',\n      description: error.toString(),\n      status: 'error',\n      duration: 3000,\n      isClosable: true,\n    });\n  }, [toast]);\n\n  useEffect(() => {\n    try {\n      TranslationService.setCallbacks(\n        handleTranslationResult,\n        handleError\n      );\n\n      // Set up socket handlers for translations\n      SocketService.setTranslationReceivedCallback((data) => {\n        const { originalText, translatedText, targetLanguage } = data;\n        setConversations(prev => [\n          ...prev,\n          {\n            original: originalText,\n            translated: translatedText,\n            timestamp: new Date().toLocaleTimeString(),\n            direction: targetLanguage === 'en-US' ? 'Albanian → English' : 'English → Albanian'\n          }\n        ].slice(-5));\n      });\n\n      // Set up socket handlers for audio\n      SocketService.setAudioReceivedCallback(async (audio, language) => {\n        try {\n          const result = await TranslationService.processAudioStream(\n            audio,\n            language,\n            currentLanguage === 'Albanian' ? 'en-US' : 'sq-AL'\n          );\n          handleTranslationResult(result.original, result.translated);\n        } catch (error) {\n          handleError(error);\n        }\n      });\n    } catch (error) {\n      setError('Speech recognition not supported in this browser. Please use Chrome.');\n    }\n  }, [handleTranslationResult, handleError, currentLanguage]);\n\n  const toggleListening = async () => {\n    try {\n      if (isListening) {\n        if (isInCall) {\n          await AudioService.stopProcessing();\n        } else {\n          await TranslationService.stopListening();\n        }\n        setIsListening(false);\n      } else {\n        setError(null);\n        if (isInCall) {\n          await SocketService.startStreaming();\n        } else {\n          await TranslationService.startListening();\n        }\n        setIsListening(true);\n      }\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  const toggleLanguage = () => {\n    const newLang = currentLanguage === 'Albanian' ? 'English' : 'Albanian';\n    setCurrentLanguage(newLang);\n    TranslationService.setLanguage(newLang === 'Albanian' ? 'sq-AL' : 'en-US');\n  };\n\n  const handleCallStart = () => {\n    setIsInCall(true);\n    setIsListening(true);\n  };\n\n  const handleCallEnd = () => {\n    setIsInCall(false);\n    setIsListening(false);\n    setIsCallModalOpen(false);\n  };\n\n  return (\n    <Container maxW=\"container.md\" py={8}>\n      <VStack spacing={6} align=\"stretch\">\n        <Heading textAlign=\"center\" mb={4}>\n          Albanian Voice Translator\n        </Heading>\n\n        <Card>\n          <CardBody>\n            <HStack justifyContent=\"space-between\" mb={4}>\n              <Text>Speaking Language:</Text>\n              <HStack>\n                <Text color={currentLanguage === 'Albanian' ? 'blue.500' : 'gray.500'}>Albanian</Text>\n                <Switch\n                  isChecked={currentLanguage === 'English'}\n                  onChange={toggleLanguage}\n                  colorScheme=\"blue\"\n                />\n                <Text color={currentLanguage === 'English' ? 'blue.500' : 'gray.500'}>English</Text>\n              </HStack>\n            </HStack>\n\n            {/* Usage Stats and Call Button */}\n            <HStack justifyContent=\"space-between\" mt={4} p={4} bg=\"gray.50\" borderRadius=\"md\">\n              <Box>\n                <Text fontSize=\"sm\">Characters Translated: {usageStats.characters}</Text>\n                <Text fontSize=\"sm\">API Requests: {usageStats.requests}</Text>\n              </Box>\n              <Button\n                colorScheme=\"purple\"\n                onClick={() => setIsCallModalOpen(true)}\n                isDisabled={isListening && !isInCall}\n              >\n                {isInCall ? 'Current Call' : 'Start Call'}\n              </Button>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {conversations.map((conv, index) => (\n          <Card key={index} variant=\"outline\">\n            <CardBody>\n              <Badge mb={2} colorScheme=\"blue\">{conv.direction}</Badge>\n              <Text fontWeight=\"bold\" mb={2}>Original:</Text>\n              <Text fontSize=\"lg\" mb={3}>{conv.original}</Text>\n              <Text fontWeight=\"bold\" mb={2}>Translated:</Text>\n              <Text fontSize=\"lg\">{conv.translated}</Text>\n              <Text fontSize=\"sm\" color=\"gray.500\" mt={2}>\n                {conv.timestamp}\n              </Text>\n            </CardBody>\n          </Card>\n        ))}\n\n        {error && (\n          <Box bg=\"red.50\" p={4} borderRadius=\"md\">\n            <Text color=\"red.500\">{error}</Text>\n          </Box>\n        )}\n\n        <Button\n          size=\"lg\"\n          colorScheme={isListening ? 'red' : 'blue'}\n          onClick={toggleListening}\n          isLoading={isListening}\n          loadingText=\"Listening...\"\n        >\n          {isListening ? 'Stop Listening' : 'Start Recording'}\n        </Button>\n\n        <CallInterface\n          isOpen={isCallModalOpen}\n          onClose={handleCallEnd}\n          onCallStart={handleCallStart}\n        />\n      </VStack>\n    </Container>\n  );\n}\n\nexport default TranslationApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}