{"ast":null,"code":"import io from'socket.io-client';import AudioService from'./AudioService';import TranslationService from'./TranslationService';class SocketService{constructor(){this.socket=null;this.roomId=null;this.isConnected=false;this.onAudioReceived=null;this.onTranslationReceived=null;}connect(){this.socket=io('http://localhost:3001');this.setupEventListeners();return new Promise((resolve,reject)=>{this.socket.on('connect',()=>{this.isConnected=true;resolve();});this.socket.on('connect_error',error=>{reject(error);});});}setupEventListeners(){this.socket.on('audio-stream',async data=>{const{audio,language,userId}=data;if(this.onAudioReceived){this.onAudioReceived(audio,language,userId);}});this.socket.on('translation-result',data=>{if(this.onTranslationReceived){this.onTranslationReceived(data);}});this.socket.on('room-closed',()=>{this.leaveRoom();});this.socket.on('disconnect',()=>{this.isConnected=false;});}async createRoom(){if(!this.isConnected){throw new Error('Socket not connected');}this.roomId=\"room_\".concat(Date.now());this.socket.emit('create-room',this.roomId);return this.roomId;}async joinRoom(roomId){if(!this.isConnected){throw new Error('Socket not connected');}this.roomId=roomId;this.socket.emit('join-room',roomId);}async startStreaming(){if(!this.roomId){throw new Error('Not in a room');}await AudioService.initializeStream();AudioService.startProcessing(audioData=>{if(this.roomId&&this.isConnected){this.socket.emit('audio-stream',{roomId:this.roomId,audio:audioData,language:TranslationService.currentLanguage});}});}leaveRoom(){if(this.roomId){this.socket.emit('leave-room',this.roomId);this.roomId=null;}AudioService.stopProcessing();}disconnect(){this.leaveRoom();if(this.socket){this.socket.disconnect();this.socket=null;}this.isConnected=false;}setAudioReceivedCallback(callback){this.onAudioReceived=callback;}setTranslationReceivedCallback(callback){this.onTranslationReceived=callback;}}export default new SocketService();","map":{"version":3,"names":["io","AudioService","TranslationService","SocketService","constructor","socket","roomId","isConnected","onAudioReceived","onTranslationReceived","connect","setupEventListeners","Promise","resolve","reject","on","error","data","audio","language","userId","leaveRoom","createRoom","Error","concat","Date","now","emit","joinRoom","startStreaming","initializeStream","startProcessing","audioData","currentLanguage","stopProcessing","disconnect","setAudioReceivedCallback","callback","setTranslationReceivedCallback"],"sources":["D:/AI Projects/translator/src/services/SocketService.js"],"sourcesContent":["import io from 'socket.io-client';\r\nimport AudioService from './AudioService';\r\nimport TranslationService from './TranslationService';\r\n\r\nclass SocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.roomId = null;\r\n    this.isConnected = false;\r\n    this.onAudioReceived = null;\r\n    this.onTranslationReceived = null;\r\n  }\r\n\r\n  connect() {\r\n    this.socket = io('http://localhost:3001');\r\n    this.setupEventListeners();\r\n    return new Promise((resolve, reject) => {\r\n      this.socket.on('connect', () => {\r\n        this.isConnected = true;\r\n        resolve();\r\n      });\r\n      this.socket.on('connect_error', (error) => {\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  setupEventListeners() {\r\n    this.socket.on('audio-stream', async (data) => {\r\n      const { audio, language, userId } = data;\r\n      if (this.onAudioReceived) {\r\n        this.onAudioReceived(audio, language, userId);\r\n      }\r\n    });\r\n\r\n    this.socket.on('translation-result', (data) => {\r\n      if (this.onTranslationReceived) {\r\n        this.onTranslationReceived(data);\r\n      }\r\n    });\r\n\r\n    this.socket.on('room-closed', () => {\r\n      this.leaveRoom();\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      this.isConnected = false;\r\n    });\r\n  }\r\n\r\n  async createRoom() {\r\n    if (!this.isConnected) {\r\n      throw new Error('Socket not connected');\r\n    }\r\n    this.roomId = `room_${Date.now()}`;\r\n    this.socket.emit('create-room', this.roomId);\r\n    return this.roomId;\r\n  }\r\n\r\n  async joinRoom(roomId) {\r\n    if (!this.isConnected) {\r\n      throw new Error('Socket not connected');\r\n    }\r\n    this.roomId = roomId;\r\n    this.socket.emit('join-room', roomId);\r\n  }\r\n\r\n  async startStreaming() {\r\n    if (!this.roomId) {\r\n      throw new Error('Not in a room');\r\n    }\r\n\r\n    await AudioService.initializeStream();\r\n    AudioService.startProcessing((audioData) => {\r\n      if (this.roomId && this.isConnected) {\r\n        this.socket.emit('audio-stream', {\r\n          roomId: this.roomId,\r\n          audio: audioData,\r\n          language: TranslationService.currentLanguage\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  leaveRoom() {\r\n    if (this.roomId) {\r\n      this.socket.emit('leave-room', this.roomId);\r\n      this.roomId = null;\r\n    }\r\n    AudioService.stopProcessing();\r\n  }\r\n\r\n  disconnect() {\r\n    this.leaveRoom();\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n    }\r\n    this.isConnected = false;\r\n  }\r\n\r\n  setAudioReceivedCallback(callback) {\r\n    this.onAudioReceived = callback;\r\n  }\r\n\r\n  setTranslationReceivedCallback(callback) {\r\n    this.onTranslationReceived = callback;\r\n  }\r\n}\r\n\r\nexport default new SocketService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}