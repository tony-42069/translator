{"ast":null,"code":"class AudioService{constructor(){this.audioContext=new(window.AudioContext||window.webkitAudioContext)();this.processor=null;this.stream=null;}async initializeStream(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:true});const source=this.audioContext.createMediaStreamSource(this.stream);this.processor=this.audioContext.createScriptProcessor(1024,1,1);source.connect(this.processor);this.processor.connect(this.audioContext.destination);return this.stream;}catch(error){console.error('Error initializing audio stream:',error);throw error;}}startProcessing(onAudioData){if(!this.processor){throw new Error('Audio processor not initialized. Call initializeStream() first.');}this.processor.onaudioprocess=e=>{const inputData=e.inputBuffer.getChannelData(0);onAudioData(inputData);};}stopProcessing(){if(this.processor){this.processor.disconnect();this.processor=null;}if(this.stream){this.stream.getTracks().forEach(track=>track.stop());this.stream=null;}}// Helper method to check if audio is initialized\nisInitialized(){return this.processor!==null&&this.stream!==null;}}export default new AudioService();","map":{"version":3,"names":["AudioService","constructor","audioContext","window","AudioContext","webkitAudioContext","processor","stream","initializeStream","navigator","mediaDevices","getUserMedia","audio","source","createMediaStreamSource","createScriptProcessor","connect","destination","error","console","startProcessing","onAudioData","Error","onaudioprocess","e","inputData","inputBuffer","getChannelData","stopProcessing","disconnect","getTracks","forEach","track","stop","isInitialized"],"sources":["D:/AI Projects/translator/src/services/AudioService.js"],"sourcesContent":["class AudioService {\r\n  constructor() {\r\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    this.processor = null;\r\n    this.stream = null;\r\n  }\r\n\r\n  async initializeStream() {\r\n    try {\r\n      this.stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const source = this.audioContext.createMediaStreamSource(this.stream);\r\n      this.processor = this.audioContext.createScriptProcessor(1024, 1, 1);\r\n      source.connect(this.processor);\r\n      this.processor.connect(this.audioContext.destination);\r\n      return this.stream;\r\n    } catch (error) {\r\n      console.error('Error initializing audio stream:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  startProcessing(onAudioData) {\r\n    if (!this.processor) {\r\n      throw new Error('Audio processor not initialized. Call initializeStream() first.');\r\n    }\r\n    \r\n    this.processor.onaudioprocess = (e) => {\r\n      const inputData = e.inputBuffer.getChannelData(0);\r\n      onAudioData(inputData);\r\n    };\r\n  }\r\n\r\n  stopProcessing() {\r\n    if (this.processor) {\r\n      this.processor.disconnect();\r\n      this.processor = null;\r\n    }\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach(track => track.stop());\r\n      this.stream = null;\r\n    }\r\n  }\r\n\r\n  // Helper method to check if audio is initialized\r\n  isInitialized() {\r\n    return this.processor !== null && this.stream !== null;\r\n  }\r\n}\r\n\r\nexport default new AudioService(); "],"mappings":"AAAA,KAAM,CAAAA,YAAa,CACjBC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,YAAY,CAAG,IAAKC,MAAM,CAACC,YAAY,EAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC,CAC5E,IAAI,CAACC,SAAS,CAAG,IAAI,CACrB,IAAI,CAACC,MAAM,CAAG,IAAI,CACpB,CAEA,KAAM,CAAAC,gBAAgBA,CAAA,CAAG,CACvB,GAAI,CACF,IAAI,CAACD,MAAM,CAAG,KAAM,CAAAE,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CACxE,KAAM,CAAAC,MAAM,CAAG,IAAI,CAACX,YAAY,CAACY,uBAAuB,CAAC,IAAI,CAACP,MAAM,CAAC,CACrE,IAAI,CAACD,SAAS,CAAG,IAAI,CAACJ,YAAY,CAACa,qBAAqB,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,CAAC,CACpEF,MAAM,CAACG,OAAO,CAAC,IAAI,CAACV,SAAS,CAAC,CAC9B,IAAI,CAACA,SAAS,CAACU,OAAO,CAAC,IAAI,CAACd,YAAY,CAACe,WAAW,CAAC,CACrD,MAAO,KAAI,CAACV,MAAM,CACpB,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxD,KAAM,CAAAA,KAAK,CACb,CACF,CAEAE,eAAeA,CAACC,WAAW,CAAE,CAC3B,GAAI,CAAC,IAAI,CAACf,SAAS,CAAE,CACnB,KAAM,IAAI,CAAAgB,KAAK,CAAC,iEAAiE,CAAC,CACpF,CAEA,IAAI,CAAChB,SAAS,CAACiB,cAAc,CAAIC,CAAC,EAAK,CACrC,KAAM,CAAAC,SAAS,CAAGD,CAAC,CAACE,WAAW,CAACC,cAAc,CAAC,CAAC,CAAC,CACjDN,WAAW,CAACI,SAAS,CAAC,CACxB,CAAC,CACH,CAEAG,cAAcA,CAAA,CAAG,CACf,GAAI,IAAI,CAACtB,SAAS,CAAE,CAClB,IAAI,CAACA,SAAS,CAACuB,UAAU,CAAC,CAAC,CAC3B,IAAI,CAACvB,SAAS,CAAG,IAAI,CACvB,CACA,GAAI,IAAI,CAACC,MAAM,CAAE,CACf,IAAI,CAACA,MAAM,CAACuB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,EAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CACtD,IAAI,CAAC1B,MAAM,CAAG,IAAI,CACpB,CACF,CAEA;AACA2B,aAAaA,CAAA,CAAG,CACd,MAAO,KAAI,CAAC5B,SAAS,GAAK,IAAI,EAAI,IAAI,CAACC,MAAM,GAAK,IAAI,CACxD,CACF,CAEA,cAAe,IAAI,CAAAP,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}